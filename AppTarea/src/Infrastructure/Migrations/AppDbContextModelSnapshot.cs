// <auto-generated />
using System;
using AppTarea.Infrastructure.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Columna", b =>
                {
                    b.Property<int>("id_columna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_columna"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("posicion")
                        .HasColumnType("int");

                    b.HasKey("id_columna");

                    b.ToTable("Columnas");
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Property<int>("id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_rol"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("id_rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Domain.Entities.Tablero", b =>
                {
                    b.Property<int>("id_tablero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_tablero"));

                    b.Property<DateTime>("creado_en")
                        .HasColumnType("datetime2");

                    b.Property<int>("creado_por")
                        .HasColumnType("int");

                    b.Property<int>("id_rol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_tablero");

                    b.HasIndex("creado_por");

                    b.HasIndex("id_rol");

                    b.ToTable("Tableros");
                });

            modelBuilder.Entity("Domain.Entities.Tarea", b =>
                {
                    b.Property<int>("id_tarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tarea");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_tarea"));

                    b.Property<int>("asignado_a")
                        .HasColumnType("int");

                    b.Property<DateTime>("creado_en")
                        .HasColumnType("datetime2");

                    b.Property<int>("creado_por")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_vencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_columna")
                        .HasColumnType("int");

                    b.Property<int>("id_tablero")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_tarea");

                    b.HasIndex("asignado_a");

                    b.HasIndex("creado_por");

                    b.HasIndex("id_columna");

                    b.HasIndex("id_tablero");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contrasena");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int>("id_rol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("id_usuario");

                    b.HasIndex("id_rol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Entities.Tablero", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "usuario")
                        .WithMany("Tableros")
                        .HasForeignKey("creado_por")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("id_rol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("rol");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Domain.Entities.Tarea", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "asignado")
                        .WithMany("tareas_asignadas")
                        .HasForeignKey("asignado_a")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "creador")
                        .WithMany("tareas_creadas")
                        .HasForeignKey("creado_por")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Columna", "columna")
                        .WithMany("tareas")
                        .HasForeignKey("id_columna")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Tablero", "tablero")
                        .WithMany("tareas")
                        .HasForeignKey("id_tablero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("asignado");

                    b.Navigation("columna");

                    b.Navigation("creador");

                    b.Navigation("tablero");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Domain.Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("id_rol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Domain.Entities.Columna", b =>
                {
                    b.Navigation("tareas");
                });

            modelBuilder.Entity("Domain.Entities.Tablero", b =>
                {
                    b.Navigation("tareas");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Tableros");

                    b.Navigation("tareas_asignadas");

                    b.Navigation("tareas_creadas");
                });
#pragma warning restore 612, 618
        }
    }
}
